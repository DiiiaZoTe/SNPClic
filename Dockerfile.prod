FROM node:20-alpine as base

WORKDIR /app

# Install dependencies in a temporary directory to speed up future builds
FROM base AS install
RUN mkdir -p /temp
COPY package*.json /temp/
RUN cd /temp && npm install

# Prepare the final image, copy necessary files
FROM base AS release
COPY --from=install /temp/node_modules ./node_modules
COPY . .

ENV SKIP_ENV_VALIDATION=true
ENV NODE_ENV=production

ARG NEXT_PUBLIC_ENVIRONMENT
ENV NEXT_PUBLIC_ENVIRONMENT=$NEXT_PUBLIC_ENVIRONMENT

ARG DATABASE_HOST
ENV DATABASE_HOST=$DATABASE_HOST

ARG DATABASE_USERNAME

ENV DATABASE_USERNAME=$DATABASE_USERNAME

ARG DATABASE_PASSWORD
ENV DATABASE_PASSWORD=$DATABASE_PASSWORD

ENV DATABASE_PORT=3306

ARG DATABASE_NAME
ENV DATABASE_NAME=$DATABASE_NAME

ARG R2_ACCESS_KEY_ID
ENV R2_ACCESS_KEY_ID=$R2_ACCESS_KEY_ID

ARG R2_SECRET_ACCESS_KEY
ENV R2_SECRET_ACCESS_KEY=$R2_SECRET_ACCESS_KEY

ARG R2_BUCKET_NAME
ENV R2_BUCKET_NAME=$R2_BUCKET_NAME

ARG R2_ACCOUNT_ID
ENV R2_ACCOUNT_ID=$R2_ACCOUNT_ID

ARG RESEND_API_KEY
ENV RESEND_API_KEY=$RESEND_API_KEY

ARG PDF_API_KEY
ENV PDF_API_KEY=$PDF_API_KEY

ARG PDF_API_URL
ENV PDF_API_URL=$PDF_API_URL

RUN npm run build

EXPOSE 3000

CMD ["npm", "run", "start"]
