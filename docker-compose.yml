version: "3.9"

name: snpclic
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_ENVIRONMENT: ${NEXT_PUBLIC_ENVIRONMENT:-production}
        DATABASE_HOST: db
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_NAME: ${DATABASE_NAME}
        R2_ACCESS_KEY_ID: ${R2_ACCESS_KEY_ID}
        R2_SECRET_ACCESS_KEY: ${R2_SECRET_ACCESS_KEY}
        R2_BUCKET_NAME: ${R2_BUCKET_NAME}
        R2_ACCOUNT_ID: ${R2_ACCOUNT_ID}
        RESEND_API_KEY: ${RESEND_API_KEY}
        PDF_API_KEY: ${PDF_API_KEY}
        PDF_API_URL: ${PDF_API_URL}
    container_name: app
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_ENVIRONMENT: development
      DATABASE_HOST: db
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      R2_ACCESS_KEY_ID: ${R2_ACCESS_KEY_ID}
      R2_SECRET_ACCESS_KEY: ${R2_SECRET_ACCESS_KEY}
      R2_BUCKET_NAME: ${R2_BUCKET_NAME}
      R2_ACCOUNT_ID: ${R2_ACCOUNT_ID}
      RESEND_API_KEY: ${RESEND_API_KEY}
      PDF_API_KEY: ${PDF_API_KEY}
      PDF_API_URL: ${PDF_API_URL}
      SERVICE_FQDN_APP_3000:
    depends_on:
      db:
        condition: service_healthy
    networks:
      - snpclic-network

  db:
    image: mysql:8
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "3333:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - snpclic-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u ${MYSQL_USER} -p${MYSQL_PASSWORD} || exit 1",
        ]
      interval: 10s
      retries: 5
      timeout: 3s
      start_period: 0s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        APP_ENVIRONMENT: ${NEXT_PUBLIC_ENVIRONMENT:-production}
    container_name: nginx
    environment:
      SERVICE_FQDN_APP_3001:
    ports:
      - "3001:80"
    depends_on:
      - app
      - db

    networks:
      - snpclic-network

networks:
  snpclic-network:
    driver: bridge

volumes:
  db_data:
